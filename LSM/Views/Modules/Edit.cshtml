@model LSM.Models.Module

@{  ViewBag.Title = "Module info";
    string messagetoshow = ViewBag.Message;
    string colortoshow = "green";
  
   
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Home ", "Index", "Courses")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Course: " + Model.Course.Name, "Edit", "Courses", new { id = Model.CourseId }, new { @class = "breadcrum-text" })</li>
        <li class="breadcrumb-item active" aria-current="page">Module: @Model.Name</li>
    </ol>
</nav>

<h1>Module: @Model.Name</h1>
@if (!(messagetoshow == "None"))
{
    <div id="message2" class="@colortoshow"><p>@messagetoshow</p></div>
}


<div class="container">
    <div class="row">
        <div class="col-md-6">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Module</h4>
                    <hr />
                    <p>@ViewBag.ActivityList</p>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.CourseId)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", rows = 15 } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StopDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StopDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StopDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn button-design" />
                            @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn button-design" })
                        </div>
                    </div>
                </div>

            }
        </div>


        <div class="col-md-6">
            @Html.ActionLink("Add new activity", "Create", "Activities", new { ModuleId = Model.Id }, new { @class = "btn button-design" })
            <div class="table_div">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>View/Edit</th>
                            <th>Day</th>
                            <th>Pass</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Activitys.OrderByDescending(x => x.Day).ToList())
                        {
                            <tr>
                                <td>
                                    @Html.ActionLink(item.Name, "Edit", "Activities", new { id = item.Id }, new { @class = "btn button-design" })
                                </td>
                                <td>
                                    @{ string month = item.Day.Month.ToString();
                                    }
                                    @if (month.Length == 1)
                                    {
                                        month = 0 + month;
                                    }
                                    @{
                                        string day = item.Day.Day.ToString();
                                    }

                                    @if (day.Length == 1)
                                    {
                                        day = 0 + day;
                                    }

                                    @item.Day.Year-@month-@day

                                </td>
                                <td>
                                    @if (item.Pass == LSM.Models.Epass.FM)
                                    {<p>Morning</p>
                                    }
                                    @if (item.Pass == LSM.Models.Epass.EM)
                                    {<p>Afternoon</p>
                                    }
                                    @if (item.Pass == LSM.Models.Epass.FMEM)
                                    {
                                        <p>Full day</p>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/ScriptforLSM.js")
}


